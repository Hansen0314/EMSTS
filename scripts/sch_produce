#!/bin/bash
#
# Copyright (c) 2018 turmary <turmary@126.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
export PATH=/opt/EMSTS/scripts/bbb:$PATH;

set -x
logthis=/var/log/$(basename $0).log
logtest=`mktemp`
exec 3>&1
exec 1>$logthis 2>&1

function result_report() {
	local error=$1

	if [ "$error" ]; then
		# error status
		result_name=${result_name}_FAIL.log
	else
		result_name=${result_name}_PASS.log
	fi

	
	echo RESULT_NAME=$result_name
	mv $logtest "$result_path$result_name"
	# upload test log/results
	$(dirname $0)/alicloud_upload.py "$result_name" "$result_path$result_name"

	sync
	sync
	sync

	if [ "$error" ]; then
		# local leds, background
		leds -p 100 -t 10000 &
		# fixture leds blink with high frequency
		echo "P 2 3" | serial_rw.py
	else
		# local leds
		leds all on
		# all fixture leds always on
		echo "P 2 4" | serial_rw.py
	fi
	while true; do sleep 5; done
}

# clear this log
: > $logtest

# Boot complete, LED cycle
# Scan bar code
auto_eepromid >> $logtest
result_name=`cat bar_code.tmp`
rm -f bar_code.tmp

result_path=/var/schneider/
# Add time to result file name
now=`TZ='Asia/Shanghai' date +"%Y%m%d%H%M"`
result_name=${result_name}_T${now}

# retrive all fixture MCU log
echo "P 8" | serial_rw.py >> $logtest

tee -a $logtest < <( ./start; r=$?; echo $r > test_result.tmp )
sync

r=`cat test_result.tmp`
rm -f test_result.tmp
[ "$r" -eq 0 ] && r=
result_report $r

